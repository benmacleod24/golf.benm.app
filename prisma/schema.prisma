generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Announcement {
  id        Int      @id @default(autoincrement())
  title     String
  message   String   @db.LongText
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Golf_Course {
  courseId   Int    @id @default(autoincrement())
  courseName String
  par        Int
  holeCount  Int?
}

model Tee_Time {
  teeTimeId Int      @id @default(autoincrement())
  time      DateTime
  teamOneId Int
  teamTwoId Int
  teamAsOne Team     @relation("TeamAsOne", fields: [teamOneId], references: [id])
  teamAsTwo Team     @relation("TeamAsTwo", fields: [teamTwoId], references: [id])

  @@index([teamTwoId])
  @@index([teamOneId])
}

model Login_Pin {
  pin  String    @id
  role UserRoles @default(GOLFER)
}

model Team {
  id           Int           @id @default(autoincrement())
  name         String
  teamMember   Team_Member[]
  teeTimeAsOne Tee_Time[]    @relation("TeamAsOne")
  teeTimeAsTwo Tee_Time[]    @relation("TeamAsTwo")
}

model Team_Member {
  id         Int         @id @default(autoincrement())
  firstName  String
  lastName   String
  teamId     Int
  A_or_B     A_or_B
  team       Team        @relation(fields: [teamId], references: [id])
  scorecards Scorecard[]

  @@index([teamId])
}

model Scorecard {
  id         String      @id @default(cuid())
  playerId   Int
  score      Int
  date       DateTime    @db.Date
  numOfHolesWon Int
  numOfOverAll Int
  teamMember Team_Member @relation(fields: [playerId], references: [id])
}

enum UserRoles {
  ADMIN
  GOLFER
}

enum A_or_B {
  A
  B
}
